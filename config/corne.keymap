/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DVORAK 0
#define SYMBOL 1
#define NUMBER 2
#define FUNCTION 3

#define CONFIG 4

&lt { quick_tap_ms = <250>; };

/ {
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <225>;
                quick_tap_ms = <250>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };

           hold: hold {
                compatible = "zmk,behavior-hold-tap";
                label = "HOLD";
                #binding-cells = <2>;
                tapping-term-ms = <225>;
                flavor = "hold-preferred";
                bindings = <&kp>, <&kp>;
            };
        };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        display-name = "DVORAK";
                        bindings = <
    &hold COLON SEMI   &kp COMMA   &kp DOT    &kp P      &kp Y                         &hm LS(F) F         &kp G      &kp C         &kp R        &kp L       
    &hm   LSHIFT A     &hm LCTRL O &hm LALT E &hm LGUI U &hm LG(LS(LA(LCTRL))) I       &hm LS(LA(LCTRL)) D &hm RGUI H &hm RALT T    &hm RCTRL N  &hm RSHIFT S
    &hold DQT SQT      &kp Q       &kp J      &kp K      &kp X                         &kp B               &kp M      &kp W         &kp V        &kp Z
                                 &kp ESC   &lt SYMBOL SPC     &kp TAB         &kp BSPC   &lt NUMBER ENTER &kp UP
                        >;
                };
                symbol_layer {
                        display-name = "SYMBOL";
                        bindings = <
   &kp GRAVE &kp AMPS &kp PLUS &kp EQUAL &kp AT        &kp EXCL    &kp ASTRK &kp HASH &kp SLASH &kp PIPE 
   &kp CARET &kp LBKT &kp LBRC &kp LPAR  &kp DLLR      &kp UNDER   &kp RPAR  &kp RBRC &kp RBKT  &kp MINUS
   &kp TILDE &kp BSLH &kp PRCT &kp AT    &kp LG(V)     &kp RC(B)   &kp EXCL  &kp LEFT &kp RIGHT &kp QMARK
                                 &mo FUNCTION &trans &trans    &kp DEL &trans &kp DOWN
                        >;
                };

                number_layer {
                        label = "NUMBER";
                        bindings = <
   &trans &trans  &trans &trans  &trans     &trans   &kp N7   &kp N8  &kp N9   &trans
   &trans &trans  &trans &trans  &trans     &trans   &kp N4   &kp N5  &kp N6   &trans
   &trans &trans  &trans &trans  &trans     &trans   &kp N1   &kp N2  &kp N3   &trans
                           &trans &trans &trans     &trans &trans &kp N0
                        >;
                };

                function_layer {
                        label = "FUNCTION";
                        bindings = <
   &mo CONFIG  &trans  &trans  &trans     &trans        &trans   &kp F7   &kp F8  &kp F9   &kp F10
   &trans      &trans  &trans  &trans     &trans        &trans   &kp F4   &kp F5  &kp F6   &kp F11
   &trans      &trans  &trans  &kp LG(C)  &kp LG(V)     &trans   &kp F1   &kp F2  &kp F3   &kp F12
                           &trans &kp C_PP &kp C_NEXT     &trans &trans &kp N0
                        >;
                };

                config_layer {
                        label = "CONFIG";
                        bindings = <
   &reset        &none        &none        &none        &none           &none &none &none &none &reset
   &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &none &none &none &none &none
   &none         &none        &none        &none        &none           &none &none &none &none &bt BT_CLR
                                &trans &trans &trans    &trans &trans &trans
                        >;
                };
        };
};
